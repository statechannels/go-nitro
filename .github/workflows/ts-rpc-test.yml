name: TypeScript RPC Client Test

on:
  pull_request:
  workflow_dispatch:
jobs:
  run-rpc-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.20.0"
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: "yarn"
          node-version: "18.15.0"

      # Install foundry so we can use it to run a chain instance
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install dependencies
        run: yarn

      - name: Build UI
        run: make ui/build

      - name: Run go-nitro RPC servers and check if they crashed
        run: |
          go run ./cmd/start-rpc-servers -ui=true &> output.log &
          echo "NITRO_PID=$!" >> $GITHUB_ENV
      - name: Check that start-rpc-servers has started
        run: |
          {
            # Check that start-rpc-server is running every 5 seconds 6 times
            for i in {1..6}; do
            if ! ps -p $NITRO_PID > /dev/null; then
                # If the process is not running, exit with an error
                echo "start-rpc-servers not running!"
                exit 1
            fi
            sleep 5
            done
          } &

      - name: Run Create Channels script
        # TODO: We could write a test specific script that creates channels and checks the results
        run: npx ts-node ./scripts/client-runner.ts create-channels -w 300000 &> output.log
        working-directory: packages/nitro-rpc-client

      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: ./**/*.log
